name: Build FastAPI app and push to AWS ECR with versioning

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/GitHubRunnerRole
          aws-region: us-east-1

      - name: Get Git Commit Hash
        id: git-info
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build image
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}
          docker build --file _infrastructure/docker/Dockerfile -t logging-server:${{ env.COMMIT_HASH }} -t logging-server:latest .
      - name: Push image to ECR
        run: |
          docker tag logging-server:${{ env.COMMIT_HASH }} ${{ secrets.ECR_URI }}:${{ env.COMMIT_HASH }}
          docker tag logging-server:latest ${{ secrets.ECR_URI }}:latest
          docker push ${{ secrets.ECR_URI }}:${{ env.COMMIT_HASH }}
          docker push ${{ secrets.ECR_URI }}:latest
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: SSH into EC2 instance, pull latest image, and rebuild docker container with latest image
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.PUBLIC_IP }}
  #         username: ubuntu
  #         key: ${{ secrets.SSH_PK }}
  #         script: |
  #           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_URI }}
  #           docker pull ${{ secrets.ECR_URI }}:latest
  #           docker rm logging_server --force || true
  #           docker run -d --network host --name logging_server -e CLOUD=True ${{ secrets.ECR_URI }}:latest
